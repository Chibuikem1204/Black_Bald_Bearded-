/*
======================================================================
Customer Report
======================================================================
Purpose:
	-This report consolidates key customer metrics and behaviour

Highlights:
	1. Gathers essential fields such name, age and transaction details.
	2. Segments customers into categories (VIP, Regular & New) and age groups.
	3. Aggregates customer-level metrics:
		-total orders
		-total sales
		-total quantity purchased
		-total products
		-lifespan (in months)
	4. Calculates valuable KPIs:
		-recency (months since last order)
		-average order value
		-average month spend
=========================================================================	
*/


CREATE VIEW gold.report_customers AS
WITH base_query AS (
/*-----------------------------------------------------------------------
1) Base Query: Retrieves core columns from tables
-------------------------------------------------------------------------*/
SELECT
	F.order_date,
	F.order_number,
	F.sales_amount,
	F.product_key,
	F.quantity,
	C.customer_key,
	C.customer_number,
	CONCAT(C.first_name, ' ', c.last_name) customer_name,
	DATEDIFF (YEAR, C.birth_date, GETDATE()) age
FROM gold.fact_sales F
LEFT JOIN gold.dim_customers C
ON c.customer_key = F.customer_key
WHERE F.order_date IS NOT NULL
)

, customer_aggregation AS
/*-----------------------------------------------------------------------
2) Customer Aggregation: Summarises key metrics at the customer level
-------------------------------------------------------------------------*/
(
SELECT
	customer_key,
	customer_number,
	customer_name,
	age,
	COUNT (DISTINCT order_number) AS total_orders,
	SUM (sales_amount) AS total_sales,
	SUM (quantity) AS total_quantity,
	COUNT (DISTINCT product_key) AS total_product,
	DATEDIFF (MONTH, min(order_date), max (order_date)) AS lifespan,
	MAX (order_date) last_orderdate
FROM base_query
GROUP BY 
	customer_key,
	customer_number,
	customer_name,
	age
)

SELECT
	customer_key,
	customer_number,
	customer_name,
	total_orders,
	total_sales,
	total_quantity,
	total_product,
	age,
	CASE 
		WHEN age < 20 THEN 'Below 20'
		WHEN age BETWEEN 20 AND 29 THEN '20-29'
		WHEN age BETWEEN 30 AND 39 THEN '30-39'
		WHEN age BETWEEN 40 AND 49 THEN '40-49'
		ELSE '50 and above'
	END AS age_group,
	CASE
		WHEN lifespan >= 12 AND total_sales > 5000 THEN 'VIP'
		WHEN lifespan >= 12 AND total_sales <= 5000 THEN 'Regular'
		ELSE 'New'
	END Customer_Segment,
	last_orderdate,
	DATEDIFF (MONTH, last_orderdate, GETDATE()) AS recency,

	--compute Average Order Value AOV = (total_sales / total_orders)
	CASE 
		WHEN total_orders = 0 THEN 0
		ELSE total_sales/total_orders 
	END AS avg_order_value,

	--compute the Average Monthly Spending = total_sales / number_of_months
	CASE 
		WHEN lifespan = 0 THEN total_sales
		ELSE total_sales/lifespan
	END AS avg_monthly_spend
FROM customer_aggregation 

